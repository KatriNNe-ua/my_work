@use "mixins.scss" as *;

.header {
	position: sticky;
	top: 0;
	z-index: 50;
		@include adaptiveValue("padding-block", 24, 16);
		@media (max-width: toEm(767.98)) {
			padding-block: toRem(15);
		}
	&__container {
		max-width: toRem(1030);
	
	}
	&__body {
		padding-left: toRem(24);
		@include adaptiveValue("padding-block", 24, 8);
		@include adaptiveValue("padding-right", 24, 8);
		border-radius: toRem(20);
		background-color: #192131;
		box-shadow:
			0px toRem(25) toRem(50) toRem(-12) rgba(0, 0, 0, 0.25),
			0px 0px toRem(15) 0px rgba(0, 0, 0, 0.07);
		display: grid;
		grid-template-columns: auto 1fr auto;
		row-gap: toRem(5);
		align-items: center;
		@include adaptiveValue("column-gap", 46, 15);
		@media (max-width: toEm(767.98)) {
			grid-template-columns: auto auto;
			justify-content: space-between;
		}
	}
	&__logo {
		position: relative;
		z-index: 3;
		font-size: toRem(32);
		font-weight: 700;
		line-height: 1.1; /* 35.2px */
		transition: color 0.3s;
		&:hover {
			color: var(--accent-color2);
		}
	}
	&__menu {
	}
	&__actions {
	}
}
.menu {
	@media (max-width: toEm(767.98)) {
		position: fixed;
		top: 0;
		left: -100%;
		width: 100%;
		height: 100%;
		overflow: auto;
		background-color: var(--main-bg);
		padding: toRem(105) toRem(23) toRem(30);
		transition: all 0.3s;
	}
	&__button {
		display: none;
		&:not(:last-child) {
			margin-bottom: toRem(15);
		}
		@media (max-width: toEm(439.98)) {
			display: block;
		}
	}
	.open-menu & {
		left: 0;
	}
	&::before {
		@media (max-width: toEm(767.98)) {
			content: "";
			position: fixed;
			background-color: var(--main-bg);
			top: toRem(15);
			left: toRem(15);
			right: toRem(15);
			visibility: hidden;
			height: toRem(65);
			border-radius: toRem(20);
			background-color: #192131;
			box-shadow:
				0px toRem(25) toRem(50) toRem(-12) rgba(0, 0, 0, 0.25),
				0px 0px toRem(15) 0px rgba(0, 0, 0, 0.07);
			transition: all 0.3s;
		}
		.open-menu & {
			visibility: visible;
		}
	}
	&__list {
		display: flex;
		column-gap: toRem(32);
		row-gap: toRem(5);
		@include adaptiveValue("column-gap", 32, 0);
		@media (max-width: toEm(767.98)) {
			flex-direction: column;
			align-items: flex-end;
			font-size: toRem(30);
			row-gap: toRem(25);
		}
		@media (max-width: toEm(439.98)) {
			margin-bottom: toRem(30);
		}
	}
	&__item {
	}
	&__link {
		transition: color 0.3s;
		white-space: nowrap;
		&:hover {
			color: var(--accent-color2);
		}
	}
}
.actions-header {
	position: relative;
	z-index: 3;
	display: flex;
	flex-wrap: wrap;
	row-gap: toRem(5);
	@include adaptiveValue("column-gap", 16, 0);

	&__button.button {
		padding: toRem(10);
		@include adaptiveValue("padding-inline", 28, 10);
		@media (max-width: toEm(439.98)) {
			display: none;
		}
	}
}
.icon-menu {
	display: none;
	&::before,
	&::after,
	& span {
		content: "";
		position: absolute;
		border-radius: toRem(4);
		height: toRem(4);
		width: 100%;
		background-color: var(--main-color-white);
		transition: all 0.3s;
	}
	&::before {
		width: toRem(15);
		top: toRem(14);
		left: toRem(10);
		.open-menu & {
			transform: translate(0, toRem(1)) rotate(45deg);
		}
	}
	&::after {
		width: toRem(15);
		bottom: toRem(14);
		right: toRem(10);
		.open-menu & {
			transform: translate(0, toRem(-2)) rotate(45deg);
		}
	}
	& span {
		width: toRem(28);
		top: 50%;
		left: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		.open-menu & {
			transform: translate(-50%, -50%) rotate(-45deg);
			width: toRem(32);
		}
	}
	@media (max-width: toEm(767.98)) {
		display: block;
		width: toRem(48);
		aspect-ratio: 1;
		position: relative;
	}
}
@media (max-width: toEm(767.98)) {
}
